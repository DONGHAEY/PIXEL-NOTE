{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\personal-P\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(boardData());\n  const [setRender] = useState(false);\n\n  function rerender() {\n    setRender(prev => !prev);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      prev[i][j].color = currentColor;\n      return prev;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(WorkBar, {\n      currentColor: currentColor,\n      setCurrentColor: setCurrentColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkSpace, {\n      rerender: rerender,\n      currentColor: currentColor,\n      tbdt: tbdt,\n      setColor: setColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"init\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TkM5adiKcyccN82UiUZ7D7u6NS8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorkBar","WorkSpace","boardData","useState","App","currentColor","setCurrentColor","tbdt","setTbdt","setRender","rerender","prev","setColor","i","j","color"],"sources":["C:/Users/USER/Documents/personal-P/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport { useState } from 'react';\n\nfunction App() {\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(boardData());\n  const [setRender] = useState(false);\n\n  function rerender() {\n    setRender(prev => !prev);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      prev[i][j].color = currentColor;\n      return prev;\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <WorkBar currentColor={currentColor} setCurrentColor={setCurrentColor}></WorkBar>\n      <WorkSpace rerender={rerender} currentColor={currentColor} tbdt={tbdt} setColor={setColor}></WorkSpace>\n      <button>save</button>\n      <button>init</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,OAAD,CAAhD;EACA,MAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACD,SAAS,EAAV,CAAhC;EACA,MAAM,CAACO,SAAD,IAAcN,QAAQ,CAAC,KAAD,CAA5B;;EAEA,SAASO,QAAT,GAAoB;IAClBD,SAAS,CAACE,IAAI,IAAI,CAACA,IAAV,CAAT;EACD;;EAED,SAASC,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;IACtBN,OAAO,CAACG,IAAI,IAAI;MACdA,IAAI,CAACE,CAAD,CAAJ,CAAQC,CAAR,EAAWC,KAAX,GAAmBV,YAAnB;MACA,OAAOM,IAAP;IACD,CAHM,CAAP;EAID;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,OAAD;MAAS,YAAY,EAAEN,YAAvB;MAAqC,eAAe,EAAEC;IAAtD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,QAAQ,EAAEI,QAArB;MAA+B,YAAY,EAAEL,YAA7C;MAA2D,IAAI,EAAEE,IAAjE;MAAuE,QAAQ,EAAEK;IAAjF;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAxBQR,G;;KAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}