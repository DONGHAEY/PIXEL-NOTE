{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\personal-P\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [currentWorkIdx, setCurrentWorkIdx] = useState(0);\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(isClick => !isClick);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      findCurrentWork().data[i][j].color = currentColor;\n      return prev;\n    });\n    setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if (clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return tbdt.find((work, index) => {\n      if (work.id === currentWorkId) {\n        setCurrentWorkIdx(index);\n        return true;\n      }\n    }) || tbdt[0];\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n\n  function changeTitle(e) {\n    setTbdt(prev => prev[currentWorkIdx].title = e.target.value);\n    setRender(prev => !prev);\n  }\n\n  function newWork() {\n    let dt = boardData();\n    let id = nanoid();\n    setTbdt(prev => [{\n      id,\n      title: \"input title\",\n      data: dt\n    }, ...prev]);\n    changeCurrentWork(id);\n    setRender(prev => !prev);\n  }\n\n  function deleteWork(id) {\n    // event.stopPropagation();\n    setTbdt(oldTbdt => oldTbdt.filter(dt => dt.id !== id));\n    setCurrentWorkId(\"\");\n    setRender(prev => !prev);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: tbdt.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [15, 85],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        tbdt: tbdt,\n        currentWorkId: currentWorkId,\n        changeCurrentWork: changeCurrentWork,\n        newWork: newWork,\n        deleteWork: deleteWork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(WorkBar, {\n          currentColor: currentColor,\n          setCurrentColor: setCurrentColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WorkSpace, {\n          setDragColor: setDragColor,\n          currentColor: currentColor,\n          tbdt: findCurrentWork(),\n          setColor: setColor,\n          clickForDrag: clickForDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Data..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"start to click below button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newWork();\n        },\n        children: \"new work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qHeVlwMf57O90JZgNdn9H1NjmJ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorkBar","WorkSpace","boardData","Sidebar","Split","useState","useEffect","nanoid","App","clicking","setClicking","currentColor","setCurrentColor","tbdt","setTbdt","JSON","parse","localStorage","getItem","currentWorkId","setCurrentWorkId","id","currentWorkIdx","setCurrentWorkIdx","render","setRender","clickForDrag","isClick","setColor","i","j","prev","findCurrentWork","data","color","setDragColor","find","work","index","changeCurrentWork","uuid","changeTitle","e","title","target","value","newWork","dt","deleteWork","oldTbdt","filter","setItem","stringify","length"],"sources":["C:/Users/USER/Documents/personal-P/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport {nanoid } from 'nanoid';\n\nfunction App() {\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [currentWorkIdx, setCurrentWorkIdx] = useState(0);\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(isClick => !isClick);\n  }\n\n  function setColor(i, j) {\n      setTbdt(prev => {\n        findCurrentWork().data[i][j].color = currentColor;\n        return prev;\n      })\n      setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if(clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return (\n      tbdt.find((work, index) => {\n        if (work.id === currentWorkId) {\n          setCurrentWorkIdx(index);\n          return true\n        }\n      }) || tbdt[0]\n    )\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n\n  function changeTitle(e) {\n    setTbdt(prev => prev[currentWorkIdx].title = e.target.value);\n    setRender(prev => !prev);\n  }\n  \n  function newWork() {\n    let dt = boardData();\n    let id = nanoid();\n    setTbdt(prev => [{\n      id,\n      title:\"input title\",\n      data : dt\n    }, ...prev]);\n    changeCurrentWork(id);\n    setRender(prev => !prev);\n  }\n  \n  function deleteWork(id) {\n    // event.stopPropagation();\n    setTbdt(oldTbdt => oldTbdt.filter((dt) => dt.id !== id));\n    setCurrentWorkId(\"\");\n    setRender(prev => !prev);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render]);\n\n  return (\n    <main>\n      {tbdt.length > 0 ? (<Split sizes={[15, 85]} direction=\"horizontal\" className=\"split\">\n          <Sidebar tbdt={tbdt} \n                  currentWorkId={currentWorkId} \n                  changeCurrentWork={changeCurrentWork} \n                  newWork={newWork}\n                  deleteWork={deleteWork}\n          />\n          <div className='App'>\n            <WorkBar \n                    currentColor={currentColor} \n                    setCurrentColor={setCurrentColor}\n            >\n            </WorkBar>\n            <WorkSpace  \n                    setDragColor={setDragColor} \n                    currentColor={currentColor} \n                    tbdt={findCurrentWork()} \n                    setColor={setColor} \n                    clickForDrag={clickForDrag}>\n            </WorkSpace>\n          </div>\n        </Split>) : \n        <div className=\"App\">\n            <h1>No Data..</h1>\n            <p>start to click below button</p>\n            <button onClick={() => {\n              newWork()\n            }}>new work</button>\n        </div>\n        }\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}