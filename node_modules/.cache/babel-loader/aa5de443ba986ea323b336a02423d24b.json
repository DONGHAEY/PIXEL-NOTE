{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\personal-P\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport Hover from './component/Hover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const workspaceEl = useRef(); // var workspaceEl = document.querySelector('.workspace');\n\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(prev => !prev);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      findCurrentWork().data[i][j].color = currentColor;\n      return prev;\n    });\n    setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if (clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return tbdt.find(work => {\n      return work.id === currentWorkId;\n    }) || tbdt[0];\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n\n  function newWork() {\n    let dt = boardData();\n    setTbdt(prev => [{\n      id: nanoid(),\n      title: \"input title\",\n      data: dt\n    }, ...prev]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: tbdt.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [15, 85],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        tbdt: tbdt,\n        currentWorkId: currentWorkId,\n        changeCurrentWork: changeCurrentWork,\n        newWork: newWork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(WorkBar, {\n          currentColor: currentColor,\n          setCurrentColor: setCurrentColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WorkSpace, {\n          setDragColor: setDragColor,\n          currentColor: currentColor,\n          tbdt: findCurrentWork(),\n          setColor: setColor,\n          clickForDrag: clickForDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Data..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"start to click below button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newWork();\n        },\n        children: \"new work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ery1DXPWw4NnDx53RZ9KX3W7Chc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorkBar","WorkSpace","boardData","Sidebar","Split","useState","useEffect","useRef","nanoid","Hover","App","workspaceEl","clicking","setClicking","currentColor","setCurrentColor","tbdt","setTbdt","JSON","parse","localStorage","getItem","currentWorkId","setCurrentWorkId","id","render","setRender","clickForDrag","prev","setColor","i","j","findCurrentWork","data","color","setDragColor","find","work","changeCurrentWork","uuid","newWork","dt","title","setItem","stringify","length"],"sources":["C:/Users/USER/Documents/personal-P/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect, useRef } from 'react';\nimport {nanoid } from 'nanoid';\nimport Hover from './component/Hover';\n\nfunction App() {\n  const workspaceEl = useRef();\n  // var workspaceEl = document.querySelector('.workspace');\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(prev => !prev);\n  }\n\n  function setColor(i, j) {\n      setTbdt(prev => {\n        findCurrentWork().data[i][j].color = currentColor;\n        return prev;\n      })\n      setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if(clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return (\n      tbdt.find((work) => {\n        return (work.id === currentWorkId)\n      }) || tbdt[0]\n    )\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n  \n  function newWork() {\n    let dt = boardData();\n    setTbdt(prev => [{\n      id: nanoid(),\n      title:\"input title\", \n      data : dt\n    }, ...prev]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render])\n\n  return (\n    <main>\n      {tbdt.length > 0 ? (<Split sizes={[15, 85]} direction=\"horizontal\" className=\"split\">\n          <Sidebar tbdt={tbdt} currentWorkId={currentWorkId} changeCurrentWork={changeCurrentWork} newWork={newWork} />\n          <div className='App'>\n            <WorkBar currentColor={currentColor} setCurrentColor={setCurrentColor}></WorkBar>\n            <WorkSpace  setDragColor={setDragColor} currentColor={currentColor} tbdt={findCurrentWork()} setColor={setColor} clickForDrag={clickForDrag} ></WorkSpace>\n          </div>\n        </Split>) : \n        <div className=\"App\">\n            <h1>No Data..</h1>\n            <p>start to click below button</p>\n            <button onClick={() => {\n              newWork()\n            }}>new work</button>\n          </div>}\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}