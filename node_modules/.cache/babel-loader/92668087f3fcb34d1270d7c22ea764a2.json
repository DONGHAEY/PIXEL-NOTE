{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\personal-P\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [mtdt, setMtdt] = useState(localStorage.getItem('MetaDatas') || []);\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"TableDatas\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(isClick => !isClick);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      findCurrentWork().data[i][j].color = currentColor;\n      return prev;\n    });\n    setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if (clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return {\n      mtdt: mtdt.find(e => {\n        return e.id === currentWorkId;\n      }) || mtdt[0],\n      tbdt: tbdt.find(work => {\n        return work.id === currentWorkId;\n      }) || tbdt[0]\n    };\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n\n  function newWork() {\n    let dt = boardData();\n    let id = nanoid();\n    setTbdt(prev => [{\n      id,\n      title: \"input title\",\n      data: dt\n    }, ...prev]);\n    setMtdt(prev => [{\n      id,\n      title: \"input title\",\n      hight: 9,\n      weight: 9\n    }, ...prev]);\n    changeCurrentWork(id);\n    setRender(prev => !prev);\n  }\n\n  function deleteWork(id) {\n    // event.stopPropagation();\n    setTbdt(oldTbdt => oldTbdt.filter(dt => dt.id !== id));\n    setCurrentWorkId(\"\");\n    setRender(prev => !prev);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"TableDatas\", JSON.stringify(tbdt));\n    localStorage.setItem(\"MetaDatas\", JSON.stringfy(mtdt));\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: tbdt.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [15, 85],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        tbdt: tbdt,\n        currentWorkId: currentWorkId,\n        changeCurrentWork: changeCurrentWork,\n        newWork: newWork,\n        deleteWork: deleteWork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(WorkBar, {\n          currentColor: currentColor,\n          setCurrentColor: setCurrentColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WorkSpace, {\n          setDragColor: setDragColor,\n          currentColor: currentColor,\n          table: findCurrentWork(),\n          setColor: setColor,\n          clickForDrag: clickForDrag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Data..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"start to click below button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newWork();\n        },\n        children: \"new work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VQmp9OiEWoLVT4mbzz8WhPiOdJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorkBar","WorkSpace","boardData","Sidebar","Split","useState","useEffect","nanoid","App","clicking","setClicking","currentColor","setCurrentColor","mtdt","setMtdt","localStorage","getItem","tbdt","setTbdt","JSON","parse","currentWorkId","setCurrentWorkId","id","render","setRender","clickForDrag","isClick","setColor","i","j","prev","findCurrentWork","data","color","setDragColor","find","e","work","changeCurrentWork","uuid","newWork","dt","title","hight","weight","deleteWork","oldTbdt","filter","setItem","stringify","stringfy","length"],"sources":["C:/Users/USER/Documents/personal-P/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport {nanoid } from 'nanoid';\n\nfunction App() {\n  const [clicking, setClicking] = useState(false);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [ mtdt, setMtdt ] = useState(localStorage.getItem('MetaDatas') || []);\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"TableDatas\")) || []);\n  const [currentWorkId, setCurrentWorkId] = useState(tbdt[0] && tbdt[0].id || \"\");\n  const [render, setRender] = useState(false);\n\n  function clickForDrag() {\n    setClicking(isClick => !isClick);\n  }\n\n  function setColor(i, j) {\n      setTbdt(prev => {\n        findCurrentWork().data[i][j].color = currentColor;\n        return prev;\n      })\n      setRender(prev => !prev);\n  }\n\n  function setDragColor(i, j) {\n    if(clicking) {\n      setColor(i, j);\n    }\n  }\n\n  function findCurrentWork() {\n    return (\n      {\n        mtdt : mtdt.find(e => {\n          return ( e.id === currentWorkId)\n        }) || mtdt[0],\n        tbdt : tbdt.find((work ) => {\n          return (work.id === currentWorkId)\n        }) || tbdt[0]\n      }\n    )\n  }\n\n  function changeCurrentWork(uuid) {\n    setCurrentWorkId(uuid);\n  }\n  \n  function newWork() {\n    let dt = boardData();\n    let id = nanoid();\n    setTbdt(prev => [{\n      id,\n      title:\"input title\",\n      data : dt\n    }, ...prev]);\n    setMtdt(prev => [{\n      id,\n      title: \"input title\",\n      hight:9,\n      weight:9,\n    }, ...prev]);\n    changeCurrentWork(id);\n    setRender(prev => !prev);\n  }\n  \n  function deleteWork(id) {\n    // event.stopPropagation();\n    setTbdt(oldTbdt => oldTbdt.filter((dt) => dt.id !== id));\n    setCurrentWorkId(\"\");\n    setRender(prev => !prev);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"TableDatas\", JSON.stringify(tbdt));\n    localStorage.setItem(\"MetaDatas\", JSON.stringfy(mtdt));\n  }, [render]);\n\n  return (\n    <main>\n      {tbdt.length > 0 ? (<Split sizes={[15, 85]} direction=\"horizontal\" className=\"split\">\n          <Sidebar tbdt={tbdt} \n                  currentWorkId={currentWorkId} \n                  changeCurrentWork={changeCurrentWork} \n                  newWork={newWork}\n                  deleteWork={deleteWork}\n                  \n          />\n          <div className='App'>\n            <WorkBar \n                    currentColor={currentColor} \n                    setCurrentColor={setCurrentColor}\n            >\n            </WorkBar>\n            <WorkSpace  \n                    setDragColor={setDragColor} \n                    currentColor={currentColor} \n                    table={findCurrentWork()} \n                    setColor={setColor} \n                    clickForDrag={clickForDrag}\n            >\n            </WorkSpace>\n          </div>\n        </Split>) : \n        <div className=\"App\">\n            <h1>No Data..</h1>\n            <p>start to click below button</p>\n            <button onClick={() => {\n              newWork()\n            }}>new work</button>\n        </div>\n        }\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}