{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\personal-P\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [render, setRender] = useState(false);\n\n  function rerender() {\n    setRender(prev => !prev);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      prev[currentPage].data[i][j].color = currentColor;\n      return prev;\n    });\n  }\n\n  function newWork() {\n    let dt = boardData();\n    setTbdt(prev => [{\n      id: nanoid(),\n      title: \"input title\",\n      data: dt\n    }, ...prev]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: tbdt.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [15, 85],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        tbdt: tbdt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(WorkBar, {\n          currentColor: currentColor,\n          setCurrentColor: setCurrentColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WorkSpace, {\n          rerender: rerender,\n          currentColor: currentColor,\n          tbdt: tbdt[currentPage],\n          setColor: setColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No Data..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"start to click below button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newWork();\n        },\n        children: \"new work\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uNghP5nI8cFcLTJJHWaRwJSfkug=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorkBar","WorkSpace","boardData","Sidebar","Split","useState","useEffect","nanoid","App","currentPage","setCurrentPage","currentColor","setCurrentColor","tbdt","setTbdt","JSON","parse","localStorage","getItem","render","setRender","rerender","prev","setColor","i","j","data","color","newWork","dt","id","title","setItem","stringify","length"],"sources":["C:/Users/USER/Documents/personal-P/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport WorkBar from './component/WorkBar';\nimport WorkSpace from './component/WorkSpace';\nimport boardData from './util/board';\nimport Sidebar from './component/SideBar';\nimport Split from \"react-split\";\nimport { useState, useEffect } from 'react';\nimport {nanoid } from 'nanoid';\n\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [currentColor, setCurrentColor] = useState('white');\n  const [tbdt, setTbdt] = useState(() => JSON.parse(localStorage.getItem(\"works\")) || []);\n  const [render, setRender] = useState(false);\n\n  function rerender() {\n    setRender(prev => !prev);\n  }\n\n  function setColor(i, j) {\n    setTbdt(prev => {\n      prev[currentPage].data[i][j].color = currentColor;\n      return prev;\n    })\n  }\n  \n  function newWork() {\n    let dt = boardData();\n    setTbdt(prev => [{\n      id: nanoid(),\n      title:\"input title\", \n      data : dt\n    }, ...prev]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(tbdt));\n  }, [render]);\n\n  return (\n    <main>\n      {tbdt.length > 0 ? (<Split sizes={[15, 85]} direction=\"horizontal\" className=\"split\">\n          <Sidebar tbdt={tbdt} />\n          <div className='App'>\n            <WorkBar currentColor={currentColor} setCurrentColor={setCurrentColor}></WorkBar>\n            <WorkSpace rerender={rerender} currentColor={currentColor} tbdt={tbdt[currentPage]} setColor={setColor}></WorkSpace>\n          </div>\n        </Split>) : \n        <div className=\"App\">\n            <h1>No Data..</h1>\n            <p>start to click below button</p>\n            <button onClick={() => {\n              newWork()\n            }}>new work</button>\n          </div>}\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}